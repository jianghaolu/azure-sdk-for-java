// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.faceapi.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The FaceAttributes model. */
@Fluent
public final class FaceAttributes {
    /*
     * Age in years
     */
    @JsonProperty(value = "age")
    private Float age;

    /*
     * Possible gender of the face.
     */
    @JsonProperty(value = "gender")
    private Gender gender;

    /*
     * Smile intensity, a number between [0,1]
     */
    @JsonProperty(value = "smile")
    private Float smile;

    /*
     * Properties describing facial hair attributes.
     */
    @JsonProperty(value = "facialHair")
    private FacialHair facialHair;

    /*
     * Glasses type if any of the face.
     */
    @JsonProperty(value = "glasses")
    private GlassesType glasses;

    /*
     * Properties indicating head pose of the face.
     */
    @JsonProperty(value = "headPose")
    private HeadPose headPose;

    /*
     * Properties describing facial emotion in form of confidence ranging from
     * 0 to 1.
     */
    @JsonProperty(value = "emotion")
    private Emotion emotion;

    /*
     * Properties describing hair attributes.
     */
    @JsonProperty(value = "hair")
    private Hair hair;

    /*
     * Properties describing present makeups on a given face.
     */
    @JsonProperty(value = "makeup")
    private Makeup makeup;

    /*
     * Properties describing occlusions on a given face.
     */
    @JsonProperty(value = "occlusion")
    private Occlusion occlusion;

    /*
     * Properties describing any accessories on a given face.
     */
    @JsonProperty(value = "accessories")
    private List<Accessory> accessories;

    /*
     * Properties describing any presence of blur within the image.
     */
    @JsonProperty(value = "blur")
    private Blur blur;

    /*
     * Properties describing exposure level of the image.
     */
    @JsonProperty(value = "exposure")
    private Exposure exposure;

    /*
     * Properties describing noise level of the image.
     */
    @JsonProperty(value = "noise")
    private Noise noise;

    /**
     * Get the age property: Age in years.
     *
     * @return the age value.
     */
    public Float getAge() {
        return this.age;
    }

    /**
     * Set the age property: Age in years.
     *
     * @param age the age value to set.
     * @return the FaceAttributes object itself.
     */
    public FaceAttributes setAge(Float age) {
        this.age = age;
        return this;
    }

    /**
     * Get the gender property: Possible gender of the face.
     *
     * @return the gender value.
     */
    public Gender getGender() {
        return this.gender;
    }

    /**
     * Set the gender property: Possible gender of the face.
     *
     * @param gender the gender value to set.
     * @return the FaceAttributes object itself.
     */
    public FaceAttributes setGender(Gender gender) {
        this.gender = gender;
        return this;
    }

    /**
     * Get the smile property: Smile intensity, a number between [0,1].
     *
     * @return the smile value.
     */
    public Float getSmile() {
        return this.smile;
    }

    /**
     * Set the smile property: Smile intensity, a number between [0,1].
     *
     * @param smile the smile value to set.
     * @return the FaceAttributes object itself.
     */
    public FaceAttributes setSmile(Float smile) {
        this.smile = smile;
        return this;
    }

    /**
     * Get the facialHair property: Properties describing facial hair attributes.
     *
     * @return the facialHair value.
     */
    public FacialHair getFacialHair() {
        return this.facialHair;
    }

    /**
     * Set the facialHair property: Properties describing facial hair attributes.
     *
     * @param facialHair the facialHair value to set.
     * @return the FaceAttributes object itself.
     */
    public FaceAttributes setFacialHair(FacialHair facialHair) {
        this.facialHair = facialHair;
        return this;
    }

    /**
     * Get the glasses property: Glasses type if any of the face.
     *
     * @return the glasses value.
     */
    public GlassesType getGlasses() {
        return this.glasses;
    }

    /**
     * Set the glasses property: Glasses type if any of the face.
     *
     * @param glasses the glasses value to set.
     * @return the FaceAttributes object itself.
     */
    public FaceAttributes setGlasses(GlassesType glasses) {
        this.glasses = glasses;
        return this;
    }

    /**
     * Get the headPose property: Properties indicating head pose of the face.
     *
     * @return the headPose value.
     */
    public HeadPose getHeadPose() {
        return this.headPose;
    }

    /**
     * Set the headPose property: Properties indicating head pose of the face.
     *
     * @param headPose the headPose value to set.
     * @return the FaceAttributes object itself.
     */
    public FaceAttributes setHeadPose(HeadPose headPose) {
        this.headPose = headPose;
        return this;
    }

    /**
     * Get the emotion property: Properties describing facial emotion in form of confidence ranging from 0 to 1.
     *
     * @return the emotion value.
     */
    public Emotion getEmotion() {
        return this.emotion;
    }

    /**
     * Set the emotion property: Properties describing facial emotion in form of confidence ranging from 0 to 1.
     *
     * @param emotion the emotion value to set.
     * @return the FaceAttributes object itself.
     */
    public FaceAttributes setEmotion(Emotion emotion) {
        this.emotion = emotion;
        return this;
    }

    /**
     * Get the hair property: Properties describing hair attributes.
     *
     * @return the hair value.
     */
    public Hair getHair() {
        return this.hair;
    }

    /**
     * Set the hair property: Properties describing hair attributes.
     *
     * @param hair the hair value to set.
     * @return the FaceAttributes object itself.
     */
    public FaceAttributes setHair(Hair hair) {
        this.hair = hair;
        return this;
    }

    /**
     * Get the makeup property: Properties describing present makeups on a given face.
     *
     * @return the makeup value.
     */
    public Makeup getMakeup() {
        return this.makeup;
    }

    /**
     * Set the makeup property: Properties describing present makeups on a given face.
     *
     * @param makeup the makeup value to set.
     * @return the FaceAttributes object itself.
     */
    public FaceAttributes setMakeup(Makeup makeup) {
        this.makeup = makeup;
        return this;
    }

    /**
     * Get the occlusion property: Properties describing occlusions on a given face.
     *
     * @return the occlusion value.
     */
    public Occlusion getOcclusion() {
        return this.occlusion;
    }

    /**
     * Set the occlusion property: Properties describing occlusions on a given face.
     *
     * @param occlusion the occlusion value to set.
     * @return the FaceAttributes object itself.
     */
    public FaceAttributes setOcclusion(Occlusion occlusion) {
        this.occlusion = occlusion;
        return this;
    }

    /**
     * Get the accessories property: Properties describing any accessories on a given face.
     *
     * @return the accessories value.
     */
    public List<Accessory> getAccessories() {
        return this.accessories;
    }

    /**
     * Set the accessories property: Properties describing any accessories on a given face.
     *
     * @param accessories the accessories value to set.
     * @return the FaceAttributes object itself.
     */
    public FaceAttributes setAccessories(List<Accessory> accessories) {
        this.accessories = accessories;
        return this;
    }

    /**
     * Get the blur property: Properties describing any presence of blur within the image.
     *
     * @return the blur value.
     */
    public Blur getBlur() {
        return this.blur;
    }

    /**
     * Set the blur property: Properties describing any presence of blur within the image.
     *
     * @param blur the blur value to set.
     * @return the FaceAttributes object itself.
     */
    public FaceAttributes setBlur(Blur blur) {
        this.blur = blur;
        return this;
    }

    /**
     * Get the exposure property: Properties describing exposure level of the image.
     *
     * @return the exposure value.
     */
    public Exposure getExposure() {
        return this.exposure;
    }

    /**
     * Set the exposure property: Properties describing exposure level of the image.
     *
     * @param exposure the exposure value to set.
     * @return the FaceAttributes object itself.
     */
    public FaceAttributes setExposure(Exposure exposure) {
        this.exposure = exposure;
        return this;
    }

    /**
     * Get the noise property: Properties describing noise level of the image.
     *
     * @return the noise value.
     */
    public Noise getNoise() {
        return this.noise;
    }

    /**
     * Set the noise property: Properties describing noise level of the image.
     *
     * @param noise the noise value to set.
     * @return the FaceAttributes object itself.
     */
    public FaceAttributes setNoise(Noise noise) {
        this.noise = noise;
        return this;
    }
}
