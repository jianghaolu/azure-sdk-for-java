// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.faceapi;

import com.azure.ai.faceapi.implementation.FaceClientImpl;
import com.azure.core.annotation.ServiceClientBuilder;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.CookiePolicy;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;

/** A builder for creating a new instance of the FaceClient type. */
@ServiceClientBuilder(
        serviceClients = {
            FaceAsyncClient.class,
            PersonGroupPersonAsyncClient.class,
            PersonGroupAsyncClient.class,
            FaceListAsyncClient.class,
            LargePersonGroupPersonAsyncClient.class,
            LargePersonGroupAsyncClient.class,
            LargeFaceListAsyncClient.class,
            SnapshotAsyncClient.class,
            FaceClient.class,
            PersonGroupPersonClient.class,
            PersonGroupClient.class,
            FaceListClient.class,
            LargePersonGroupPersonClient.class,
            LargePersonGroupClient.class,
            LargeFaceListClient.class,
            SnapshotClient.class
        })
public final class FaceClientBuilder {
    /*
     * Supported Cognitive Services endpoints (protocol and hostname, for
     * example: https://westus.api.cognitive.microsoft.com).
     */
    private String endpoint;

    /**
     * Sets Supported Cognitive Services endpoints (protocol and hostname, for example:
     * https://westus.api.cognitive.microsoft.com).
     *
     * @param endpoint the endpoint value.
     * @return the FaceClientBuilder.
     */
    public FaceClientBuilder endpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }

    /*
     * The HTTP pipeline to send requests through
     */
    private HttpPipeline pipeline;

    /**
     * Sets The HTTP pipeline to send requests through.
     *
     * @param pipeline the pipeline value.
     * @return the FaceClientBuilder.
     */
    public FaceClientBuilder pipeline(HttpPipeline pipeline) {
        this.pipeline = pipeline;
        return this;
    }

    /**
     * Builds an instance of FaceClientImpl with the provided parameters.
     *
     * @return an instance of FaceClientImpl.
     */
    private FaceClientImpl buildInnerClient() {
        if (pipeline == null) {
            this.pipeline =
                    new HttpPipelineBuilder()
                            .policies(new UserAgentPolicy(), new RetryPolicy(), new CookiePolicy())
                            .build();
        }
        FaceClientImpl client = new FaceClientImpl(pipeline, endpoint);
        return client;
    }

    /**
     * Builds an instance of FaceAsyncClient async client.
     *
     * @return an instance of FaceAsyncClient.
     */
    public FaceAsyncClient buildFaceAsyncClient() {
        return new FaceAsyncClient(buildInnerClient().getFaces());
    }

    /**
     * Builds an instance of PersonGroupPersonAsyncClient async client.
     *
     * @return an instance of PersonGroupPersonAsyncClient.
     */
    public PersonGroupPersonAsyncClient buildPersonGroupPersonAsyncClient() {
        return new PersonGroupPersonAsyncClient(buildInnerClient().getPersonGroupPersons());
    }

    /**
     * Builds an instance of PersonGroupAsyncClient async client.
     *
     * @return an instance of PersonGroupAsyncClient.
     */
    public PersonGroupAsyncClient buildPersonGroupAsyncClient() {
        return new PersonGroupAsyncClient(buildInnerClient().getPersonGroups());
    }

    /**
     * Builds an instance of FaceListAsyncClient async client.
     *
     * @return an instance of FaceListAsyncClient.
     */
    public FaceListAsyncClient buildFaceListAsyncClient() {
        return new FaceListAsyncClient(buildInnerClient().getFaceLists());
    }

    /**
     * Builds an instance of LargePersonGroupPersonAsyncClient async client.
     *
     * @return an instance of LargePersonGroupPersonAsyncClient.
     */
    public LargePersonGroupPersonAsyncClient buildLargePersonGroupPersonAsyncClient() {
        return new LargePersonGroupPersonAsyncClient(buildInnerClient().getLargePersonGroupPersons());
    }

    /**
     * Builds an instance of LargePersonGroupAsyncClient async client.
     *
     * @return an instance of LargePersonGroupAsyncClient.
     */
    public LargePersonGroupAsyncClient buildLargePersonGroupAsyncClient() {
        return new LargePersonGroupAsyncClient(buildInnerClient().getLargePersonGroups());
    }

    /**
     * Builds an instance of LargeFaceListAsyncClient async client.
     *
     * @return an instance of LargeFaceListAsyncClient.
     */
    public LargeFaceListAsyncClient buildLargeFaceListAsyncClient() {
        return new LargeFaceListAsyncClient(buildInnerClient().getLargeFaceLists());
    }

    /**
     * Builds an instance of SnapshotAsyncClient async client.
     *
     * @return an instance of SnapshotAsyncClient.
     */
    public SnapshotAsyncClient buildSnapshotAsyncClient() {
        return new SnapshotAsyncClient(buildInnerClient().getSnapshots());
    }

    /**
     * Builds an instance of FaceClient sync client.
     *
     * @return an instance of FaceClient.
     */
    public FaceClient buildFaceClient() {
        return new FaceClient(buildInnerClient().getFaces());
    }

    /**
     * Builds an instance of PersonGroupPersonClient sync client.
     *
     * @return an instance of PersonGroupPersonClient.
     */
    public PersonGroupPersonClient buildPersonGroupPersonClient() {
        return new PersonGroupPersonClient(buildInnerClient().getPersonGroupPersons());
    }

    /**
     * Builds an instance of PersonGroupClient sync client.
     *
     * @return an instance of PersonGroupClient.
     */
    public PersonGroupClient buildPersonGroupClient() {
        return new PersonGroupClient(buildInnerClient().getPersonGroups());
    }

    /**
     * Builds an instance of FaceListClient sync client.
     *
     * @return an instance of FaceListClient.
     */
    public FaceListClient buildFaceListClient() {
        return new FaceListClient(buildInnerClient().getFaceLists());
    }

    /**
     * Builds an instance of LargePersonGroupPersonClient sync client.
     *
     * @return an instance of LargePersonGroupPersonClient.
     */
    public LargePersonGroupPersonClient buildLargePersonGroupPersonClient() {
        return new LargePersonGroupPersonClient(buildInnerClient().getLargePersonGroupPersons());
    }

    /**
     * Builds an instance of LargePersonGroupClient sync client.
     *
     * @return an instance of LargePersonGroupClient.
     */
    public LargePersonGroupClient buildLargePersonGroupClient() {
        return new LargePersonGroupClient(buildInnerClient().getLargePersonGroups());
    }

    /**
     * Builds an instance of LargeFaceListClient sync client.
     *
     * @return an instance of LargeFaceListClient.
     */
    public LargeFaceListClient buildLargeFaceListClient() {
        return new LargeFaceListClient(buildInnerClient().getLargeFaceLists());
    }

    /**
     * Builds an instance of SnapshotClient sync client.
     *
     * @return an instance of SnapshotClient.
     */
    public SnapshotClient buildSnapshotClient() {
        return new SnapshotClient(buildInnerClient().getSnapshots());
    }
}
