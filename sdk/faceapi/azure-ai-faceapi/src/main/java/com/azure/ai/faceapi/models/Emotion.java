// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.faceapi.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The Emotion model. */
@Fluent
public final class Emotion {
    /*
     * A number ranging from 0 to 1 indicating a level of confidence associated
     * with a property.
     */
    @JsonProperty(value = "anger")
    private Float anger;

    /*
     * A number ranging from 0 to 1 indicating a level of confidence associated
     * with a property.
     */
    @JsonProperty(value = "contempt")
    private Float contempt;

    /*
     * A number ranging from 0 to 1 indicating a level of confidence associated
     * with a property.
     */
    @JsonProperty(value = "disgust")
    private Float disgust;

    /*
     * A number ranging from 0 to 1 indicating a level of confidence associated
     * with a property.
     */
    @JsonProperty(value = "fear")
    private Float fear;

    /*
     * A number ranging from 0 to 1 indicating a level of confidence associated
     * with a property.
     */
    @JsonProperty(value = "happiness")
    private Float happiness;

    /*
     * A number ranging from 0 to 1 indicating a level of confidence associated
     * with a property.
     */
    @JsonProperty(value = "neutral")
    private Float neutral;

    /*
     * A number ranging from 0 to 1 indicating a level of confidence associated
     * with a property.
     */
    @JsonProperty(value = "sadness")
    private Float sadness;

    /*
     * A number ranging from 0 to 1 indicating a level of confidence associated
     * with a property.
     */
    @JsonProperty(value = "surprise")
    private Float surprise;

    /**
     * Get the anger property: A number ranging from 0 to 1 indicating a level of confidence associated with a property.
     *
     * @return the anger value.
     */
    public Float getAnger() {
        return this.anger;
    }

    /**
     * Set the anger property: A number ranging from 0 to 1 indicating a level of confidence associated with a property.
     *
     * @param anger the anger value to set.
     * @return the Emotion object itself.
     */
    public Emotion setAnger(Float anger) {
        this.anger = anger;
        return this;
    }

    /**
     * Get the contempt property: A number ranging from 0 to 1 indicating a level of confidence associated with a
     * property.
     *
     * @return the contempt value.
     */
    public Float getContempt() {
        return this.contempt;
    }

    /**
     * Set the contempt property: A number ranging from 0 to 1 indicating a level of confidence associated with a
     * property.
     *
     * @param contempt the contempt value to set.
     * @return the Emotion object itself.
     */
    public Emotion setContempt(Float contempt) {
        this.contempt = contempt;
        return this;
    }

    /**
     * Get the disgust property: A number ranging from 0 to 1 indicating a level of confidence associated with a
     * property.
     *
     * @return the disgust value.
     */
    public Float getDisgust() {
        return this.disgust;
    }

    /**
     * Set the disgust property: A number ranging from 0 to 1 indicating a level of confidence associated with a
     * property.
     *
     * @param disgust the disgust value to set.
     * @return the Emotion object itself.
     */
    public Emotion setDisgust(Float disgust) {
        this.disgust = disgust;
        return this;
    }

    /**
     * Get the fear property: A number ranging from 0 to 1 indicating a level of confidence associated with a property.
     *
     * @return the fear value.
     */
    public Float getFear() {
        return this.fear;
    }

    /**
     * Set the fear property: A number ranging from 0 to 1 indicating a level of confidence associated with a property.
     *
     * @param fear the fear value to set.
     * @return the Emotion object itself.
     */
    public Emotion setFear(Float fear) {
        this.fear = fear;
        return this;
    }

    /**
     * Get the happiness property: A number ranging from 0 to 1 indicating a level of confidence associated with a
     * property.
     *
     * @return the happiness value.
     */
    public Float getHappiness() {
        return this.happiness;
    }

    /**
     * Set the happiness property: A number ranging from 0 to 1 indicating a level of confidence associated with a
     * property.
     *
     * @param happiness the happiness value to set.
     * @return the Emotion object itself.
     */
    public Emotion setHappiness(Float happiness) {
        this.happiness = happiness;
        return this;
    }

    /**
     * Get the neutral property: A number ranging from 0 to 1 indicating a level of confidence associated with a
     * property.
     *
     * @return the neutral value.
     */
    public Float getNeutral() {
        return this.neutral;
    }

    /**
     * Set the neutral property: A number ranging from 0 to 1 indicating a level of confidence associated with a
     * property.
     *
     * @param neutral the neutral value to set.
     * @return the Emotion object itself.
     */
    public Emotion setNeutral(Float neutral) {
        this.neutral = neutral;
        return this;
    }

    /**
     * Get the sadness property: A number ranging from 0 to 1 indicating a level of confidence associated with a
     * property.
     *
     * @return the sadness value.
     */
    public Float getSadness() {
        return this.sadness;
    }

    /**
     * Set the sadness property: A number ranging from 0 to 1 indicating a level of confidence associated with a
     * property.
     *
     * @param sadness the sadness value to set.
     * @return the Emotion object itself.
     */
    public Emotion setSadness(Float sadness) {
        this.sadness = sadness;
        return this;
    }

    /**
     * Get the surprise property: A number ranging from 0 to 1 indicating a level of confidence associated with a
     * property.
     *
     * @return the surprise value.
     */
    public Float getSurprise() {
        return this.surprise;
    }

    /**
     * Set the surprise property: A number ranging from 0 to 1 indicating a level of confidence associated with a
     * property.
     *
     * @param surprise the surprise value to set.
     * @return the Emotion object itself.
     */
    public Emotion setSurprise(Float surprise) {
        this.surprise = surprise;
        return this;
    }
}
