// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.cognitiveservices.face.implementation;

import com.azure.cognitiveservices.face.FaceClient;
import com.azure.cognitiveservices.face.FaceLists;
import com.azure.cognitiveservices.face.Faces;
import com.azure.cognitiveservices.face.LargeFaceLists;
import com.azure.cognitiveservices.face.LargePersonGroupPersons;
import com.azure.cognitiveservices.face.LargePersonGroups;
import com.azure.cognitiveservices.face.PersonGroupPersons;
import com.azure.cognitiveservices.face.PersonGroups;
import com.azure.cognitiveservices.face.Snapshots;
import com.azure.core.annotation.ServiceClientBuilder;
import com.azure.core.http.HttpPipeline;
import com.azure.core.implementation.RestProxy;

/**
 * A builder for creating a new instance of the FaceClient type.
 */
@ServiceClientBuilder(serviceClients = FaceClient.class)
public final class FaceClientBuilder {
    /*
     * Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).
     */
    private String endpoint;

    /**
     * Sets Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).
     *
     * @param endpoint the endpoint value.
     * @return the FaceClientBuilder.
     */
    public FaceClientBuilder endpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }

    /*
     * The HTTP pipeline to send requests through
     */
    private HttpPipeline pipeline;

    /**
     * Sets The HTTP pipeline to send requests through.
     *
     * @param pipeline the pipeline value.
     * @return the FaceClientBuilder.
     */
    public FaceClientBuilder pipeline(HttpPipeline pipeline) {
        this.pipeline = pipeline;
        return this;
    }

    /**
     * Builds an instance of FaceClient with the provided parameters.
     *
     * @return an instance of FaceClient.
     */
    public FaceClient build() {
        if (pipeline == null) {
            this.pipeline = RestProxy.createDefaultPipeline();
        }
        FaceClientImpl client = new FaceClientImpl(pipeline);
        if (this.endpoint != null) {
            client.setEndpoint(this.endpoint);
        }
        return client;
    }
}
