// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.cognitiveservices.computervision.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * An object detected inside an image.
 */
@Fluent
public final class ObjectHierarchy {
    /*
     * Label for the object.
     */
    @JsonProperty(value = "object")
    private String object;

    /*
     * Confidence score of having observed the object in the image, as a value
     * ranging from 0 to 1.
     */
    @JsonProperty(value = "confidence")
    private double confidence;

    /*
     * The parent object, from a taxonomy perspective.
     * The parent object is a more generic form of this object.  For example, a
     * 'bulldog' would have a parent of 'dog'.
     */
    @JsonProperty(value = "parent")
    private ObjectHierarchy parent;

    /**
     * Get the object property: Label for the object.
     *
     * @return the object value.
     */
    public String getObject() {
        return this.object;
    }

    /**
     * Set the object property: Label for the object.
     *
     * @param object the object value to set.
     * @return the ObjectHierarchy object itself.
     */
    public ObjectHierarchy setObject(String object) {
        this.object = object;
        return this;
    }

    /**
     * Get the confidence property: Confidence score of having observed the
     * object in the image, as a value ranging from 0 to 1.
     *
     * @return the confidence value.
     */
    public double getConfidence() {
        return this.confidence;
    }

    /**
     * Set the confidence property: Confidence score of having observed the
     * object in the image, as a value ranging from 0 to 1.
     *
     * @param confidence the confidence value to set.
     * @return the ObjectHierarchy object itself.
     */
    public ObjectHierarchy setConfidence(double confidence) {
        this.confidence = confidence;
        return this;
    }

    /**
     * Get the parent property: The parent object, from a taxonomy perspective.
     * The parent object is a more generic form of this object.  For example, a
     * 'bulldog' would have a parent of 'dog'.
     *
     * @return the parent value.
     */
    public ObjectHierarchy getParent() {
        return this.parent;
    }

    /**
     * Set the parent property: The parent object, from a taxonomy perspective.
     * The parent object is a more generic form of this object.  For example, a
     * 'bulldog' would have a parent of 'dog'.
     *
     * @param parent the parent value to set.
     * @return the ObjectHierarchy object itself.
     */
    public ObjectHierarchy setParent(ObjectHierarchy parent) {
        this.parent = parent;
        return this;
    }
}
