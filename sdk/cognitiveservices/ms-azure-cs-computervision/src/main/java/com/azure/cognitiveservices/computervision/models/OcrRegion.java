// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.cognitiveservices.computervision.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * A region consists of multiple lines (e.g. a column of text in a multi-column
 * document).
 */
@Fluent
public final class OcrRegion {
    /*
     * Bounding box of a recognized region. The four integers represent the
     * x-coordinate of the left edge, the y-coordinate of the top edge, width,
     * and height of the bounding box, in the coordinate system of the input
     * image, after it has been rotated around its center according to the
     * detected text angle (see textAngle property), with the origin at the
     * top-left corner, and the y-axis pointing down.
     */
    @JsonProperty(value = "boundingBox")
    private String boundingBox;

    /*
     * An array of recognized lines of text.
     */
    @JsonProperty(value = "lines")
    private List<OcrLine> lines;

    /**
     * Get the boundingBox property: Bounding box of a recognized region. The
     * four integers represent the x-coordinate of the left edge, the
     * y-coordinate of the top edge, width, and height of the bounding box, in
     * the coordinate system of the input image, after it has been rotated
     * around its center according to the detected text angle (see textAngle
     * property), with the origin at the top-left corner, and the y-axis
     * pointing down.
     *
     * @return the boundingBox value.
     */
    public String getBoundingBox() {
        return this.boundingBox;
    }

    /**
     * Set the boundingBox property: Bounding box of a recognized region. The
     * four integers represent the x-coordinate of the left edge, the
     * y-coordinate of the top edge, width, and height of the bounding box, in
     * the coordinate system of the input image, after it has been rotated
     * around its center according to the detected text angle (see textAngle
     * property), with the origin at the top-left corner, and the y-axis
     * pointing down.
     *
     * @param boundingBox the boundingBox value to set.
     * @return the OcrRegion object itself.
     */
    public OcrRegion setBoundingBox(String boundingBox) {
        this.boundingBox = boundingBox;
        return this;
    }

    /**
     * Get the lines property: An array of recognized lines of text.
     *
     * @return the lines value.
     */
    public List<OcrLine> getLines() {
        return this.lines;
    }

    /**
     * Set the lines property: An array of recognized lines of text.
     *
     * @param lines the lines value to set.
     * @return the OcrRegion object itself.
     */
    public OcrRegion setLines(List<OcrLine> lines) {
        this.lines = lines;
        return this;
    }
}
